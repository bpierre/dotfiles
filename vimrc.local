set nocompatible                " choose no compatibility with legacy vi
syntax enable
set encoding=utf-8
set showcmd                     " display incomplete commands
set nu

"" Vim Bundle manager
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'majutsushi/tagbar'
Bundle 'scrooloose/nerdtree'
Bundle 'wavded/vim-stylus'
Bundle 'pangloss/vim-javascript'
Bundle 'jelera/vim-javascript-syntax'
"Bundle 'wincent/Command-T'
Bundle 'kien/ctrlp.vim'
Bundle 'tpope/vim-fugitive'
Bundle 'vim-scripts/jshint.vim'
Bundle 'vim-scripts/ZoomWin'
Bundle 'mileszs/ack.vim'
Bundle 'joonty/vdebug.git'

"" Snipmate
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'honza/snipmate-snippets'
Bundle 'garbas/vim-snipmate'

filetype plugin indent on       " load file type plugins + indentation

" Set to auto read when a file is changed from the outside
set autoread

"" Syntax / Coloration
syntax enable
set background=dark
colorscheme desert

"" Ignore some files
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*

"" No auto folding
set nofoldenable

"" Autojump to the last edited position
au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") |
                     \ exe "normal g'\"" | endif

"" CtrlP Plugin
let g:ctrlp_map = '<c-t>'  " Remap CtrP plugin on Ctrl+T
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git' " Ignore some files

"" Whitespace
set expandtab                            " use spaces, not tabs
set tabstop=2 shiftwidth=2 softtabstop=2 " a tab is two spaces
set nowrap                               " don't wrap lines
set backspace=indent,eol,start           " backspace through everything in insert mode

" python spaces
au FileType python set noexpandtab

" html spaces
au FileType html setlocal tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab
au FileType xml setlocal tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab
au FileType xslt setlocal tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab
au FileType javascript setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab

" filetypes
au BufRead,BufNewFile *.md setfiletype markdown

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" tagbar is a plugin which lists the functions of the opened file
nmap <F8> :TagbarToggle<CR>

" Command-T
" let g:CommandTMaxHeight = 30    " Command-T height
" map <C-t> :CommandT<CR>
" map <C-s> :CommandTBuffer<CR>

" Open NERDTree on launch
if has("gui_running")
  autocmd VimEnter * NERDTree
  autocmd VimEnter * wincmd p
endif

" Toggle NERDTree shortcut
map <F2> :NERDTreeToggle<CR>

" Show 7 lines below / above the cursor
set so=7

" Reset search
nnoremap <F7> :let @/ = ""<CR>

" Reset search
nnoremap <C-l> :JSHint<CR>
